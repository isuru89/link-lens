name: Link-Lens CD

on:
  push:
    branches: [ "cts-d" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:
    runs-on: ubuntu-latest

    concurrency: deploy-group

    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Install & Build Web
      run: |
        cd web 
        npm i
        npm run build

    - name: Docker Login
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker Meta Extractor
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Docker Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - uses: superfly/flyctl-actions/setup-flyctl@master

    - run: flyctl deploy --remote-only
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}